/*Примерно та же ситуация происходит с подсчётом медианы, когда в массиве хранится чётное количество элементов. Но в отличие от пирожков, для медианы решение нашли. Если количество элементов чётное, то медиана считается как среднее значение от двух элементов: левого и правого от середины.

// Медиана: 3
[0, 1, 2, 4, 50, 100]
Снова выводим формулы индексов двух элементов: левого и правого от середины.

// Длина 4, индекс левого 1, правого 2
[1, 2, 3, 4]

// Длина 6, индекс левого 2, правого 3
[1, 2, 3, 4, 5, 6]

// Длина 8, индекс левого 3, правого 4
[1, 2, 3, 4, 5, 6, 7, 8]
Делим длину массива на два и вычитаем единицу — левый индекс найден. Делим длину массива на два — правый индекс найден.

Расчёт медианы для чётного количества элементов в массиве добавляем в альтернативной ветке условия.*/


var usersByDay = [1, 2, 3, 4, 5, 6];
console.log(usersByDay);

if (usersByDay.length % 2 !== 0) {
  var medianIndex = (usersByDay.length - 1) / 2;
  console.log(medianIndex);
  var median = usersByDay[medianIndex];
  console.log(median);
} else {
 var leftIndex = usersByDay.length/2 - 1;
 var rightIndex = usersByDay.length/2;
 console.log(leftIndex);
 console.log(rightIndex);
 var median = (usersByDay[leftIndex] + usersByDay[rightIndex])/2;
 console.log(median);
}